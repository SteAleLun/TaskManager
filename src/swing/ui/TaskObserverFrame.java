package swing.ui;

import model.Task;
import javax.swing.*;
import java.awt.*;

public class TaskObserverFrame extends JFrame {
    private JList<Task> jListComponent;
    private JTextField newTaskInputField;
    private JButton completeButton;
    private JButton postponeButton;
    private JPanel listSelectorPanel;
    private JPanel mainPanel;

    public TaskObserverFrame() throws HeadlessException {
        setTitle("Task manager");
        setLocationRelativeTo(null);
        getContentPane().add(mainPanel);
        initTaskListSelector();
        initJList();
        pack();
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    }

    private void initJList() {
        jListComponent.setCellRenderer(new TaskListCellRenderer());
    }

    public JList<Task> getJListComponent() {
        return jListComponent;
    }

    // отобразить кнопки-переключатели списков
    private void initTaskListSelector() {
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        mainPanel.setMinimumSize(new Dimension(224, 415));
        mainPanel.setPreferredSize(new Dimension(600, 500));
        final JScrollPane scrollPane1 = new JScrollPane();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(5, 10, 10, 10);
        mainPanel.add(scrollPane1, gbc);
        jListComponent = new JList();
        scrollPane1.setViewportView(jListComponent);
        newTaskInputField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 10, 0, 10);
        mainPanel.add(newTaskInputField, gbc);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 10, 0, 10);
        mainPanel.add(panel1, gbc);
        completeButton = new JButton();
        completeButton.setPreferredSize(new Dimension(100, 30));
        completeButton.setText("Complete");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 0.45;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 10, 5, 0);
        panel1.add(completeButton, gbc);
        postponeButton = new JButton();
        postponeButton.setPreferredSize(new Dimension(100, 30));
        postponeButton.setText("Postpone");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.weightx = 0.45;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(5, 0, 5, 10);
        panel1.add(postponeButton, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 0.1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer1, gbc);
        listSelectorPanel = new JPanel();
        listSelectorPanel.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        mainPanel.add(listSelectorPanel, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
